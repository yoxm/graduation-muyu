<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nanfenggongxiang.Dao.CommodityMapper">
  <resultMap id="BaseResultMap" type="com.nanfenggongxiang.Domain.Commodity">
    <id column="gid" jdbcType="INTEGER" property="gid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="conditions" jdbcType="INTEGER" property="conditions" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
    <result column="goods_type" jdbcType="INTEGER" property="goodsType" />
    <result column="page_views" jdbcType="INTEGER" property="pageViews" />
    <result column="release_time" jdbcType="TIMESTAMP" property="releaseTime" />
    <result column="is_sell_out" jdbcType="INTEGER" property="isSellOut" />
    <result column="is_want_by" jdbcType="INTEGER" property="isWantBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    gid, uid, goods_name, price, conditions, content, picture, goods_type, page_views, 
    release_time, is_sell_out, is_want_by
  </sql>
  <select id="selectByExample" parameterType="com.nanfenggongxiang.Domain.CommodityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from commodity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from commodity
    where gid = #{gid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from commodity
    where gid = #{gid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nanfenggongxiang.Domain.CommodityExample">
    delete from commodity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nanfenggongxiang.Domain.Commodity">
    <selectKey keyProperty="gid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into commodity (uid, goods_name, price, 
      conditions, content, picture, 
      goods_type, page_views, release_time, 
      is_sell_out, is_want_by)
    values (#{uid,jdbcType=INTEGER}, #{goodsName,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, 
      #{conditions,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR}, 
      #{goodsType,jdbcType=INTEGER}, #{pageViews,jdbcType=INTEGER}, #{releaseTime,jdbcType=TIMESTAMP}, 
      #{isSellOut,jdbcType=INTEGER}, #{isWantBy,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.nanfenggongxiang.Domain.Commodity">
    <selectKey keyProperty="gid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into commodity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="conditions != null">
        conditions,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="goodsType != null">
        goods_type,
      </if>
      <if test="pageViews != null">
        page_views,
      </if>
      <if test="releaseTime != null">
        release_time,
      </if>
      <if test="isSellOut != null">
        is_sell_out,
      </if>
      <if test="isWantBy != null">
        is_want_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="conditions != null">
        #{conditions,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="goodsType != null">
        #{goodsType,jdbcType=INTEGER},
      </if>
      <if test="pageViews != null">
        #{pageViews,jdbcType=INTEGER},
      </if>
      <if test="releaseTime != null">
        #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isSellOut != null">
        #{isSellOut,jdbcType=INTEGER},
      </if>
      <if test="isWantBy != null">
        #{isWantBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nanfenggongxiang.Domain.CommodityExample" resultType="java.lang.Long">
    select count(*) from commodity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update commodity
    <set>
      <if test="record.gid != null">
        gid = #{record.gid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.conditions != null">
        conditions = #{record.conditions,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.picture != null">
        picture = #{record.picture,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsType != null">
        goods_type = #{record.goodsType,jdbcType=INTEGER},
      </if>
      <if test="record.pageViews != null">
        page_views = #{record.pageViews,jdbcType=INTEGER},
      </if>
      <if test="record.releaseTime != null">
        release_time = #{record.releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isSellOut != null">
        is_sell_out = #{record.isSellOut,jdbcType=INTEGER},
      </if>
      <if test="record.isWantBy != null">
        is_want_by = #{record.isWantBy,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update commodity
    set gid = #{record.gid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=INTEGER},
      conditions = #{record.conditions,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      picture = #{record.picture,jdbcType=VARCHAR},
      goods_type = #{record.goodsType,jdbcType=INTEGER},
      page_views = #{record.pageViews,jdbcType=INTEGER},
      release_time = #{record.releaseTime,jdbcType=TIMESTAMP},
      is_sell_out = #{record.isSellOut,jdbcType=INTEGER},
      is_want_by = #{record.isWantBy,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nanfenggongxiang.Domain.Commodity">
    update commodity
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="conditions != null">
        conditions = #{conditions,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="goodsType != null">
        goods_type = #{goodsType,jdbcType=INTEGER},
      </if>
      <if test="pageViews != null">
        page_views = #{pageViews,jdbcType=INTEGER},
      </if>
      <if test="releaseTime != null">
        release_time = #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isSellOut != null">
        is_sell_out = #{isSellOut,jdbcType=INTEGER},
      </if>
      <if test="isWantBy != null">
        is_want_by = #{isWantBy,jdbcType=INTEGER},
      </if>
    </set>
    where gid = #{gid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nanfenggongxiang.Domain.Commodity">
    update commodity
    set uid = #{uid,jdbcType=INTEGER},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      conditions = #{conditions,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR},
      goods_type = #{goodsType,jdbcType=INTEGER},
      page_views = #{pageViews,jdbcType=INTEGER},
      release_time = #{releaseTime,jdbcType=TIMESTAMP},
      is_sell_out = #{isSellOut,jdbcType=INTEGER},
      is_want_by = #{isWantBy,jdbcType=INTEGER}
    where gid = #{gid,jdbcType=INTEGER}
  </update>
</mapper>